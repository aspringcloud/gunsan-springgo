version: '3.7'

services:
  base-web:
    build:
      context: ./app
      dockerfile: Dockerfile.base.prod

  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn --workers=17 config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    ports:
      - 8000:8000
    env_file:
      - ./.env
    restart: always
    depends_on:
      - postgresql

  nginx:
    restart: unless-stopped
    image: nginx
    ports:
      - 80:80
      - 300:300
    volumes:
      # - ./nginx/user:/etc/nginx/user.conf.d:ro
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./cert/RootChain:/etc/pki/tls/certs
      - ./cert/private:/etc/pki/tls/private
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    depends_on:
      - web

  postgresql:
    image: postgres
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /data0:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    env_file:
      - ./.env.prod.pg
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - 7070:80

volumes:
  postgres_data:
  static_volume:
  media_volume:
  pgadmin:
